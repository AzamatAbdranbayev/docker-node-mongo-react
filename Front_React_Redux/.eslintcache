[{"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\container\\App.js":"1","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\container\\TracksInfo\\TracksInfo.js":"2","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\store\\reducers\\listFMReducer.js":"3","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\axios-api.js":"4","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\store\\actions\\listFMAction\\listFMActions.js":"5","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\store\\actions\\User\\UserActionTypes.js":"6","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\container\\ListFM\\ListFM.js":"7","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\container\\Register\\Register.js":"8","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\components\\UserMenu\\UserMenu.js":"9","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\container\\ArtistInfo\\ArtistInfo.js":"10","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\container\\Login\\Login.js":"11","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\index.js":"12","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\components\\Layout\\Layout.js":"13","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\container\\TrackHistory\\TrackHistory.js":"14","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\store\\reducers\\user.js":"15","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\store\\actions\\listFMAction\\listFMActionTypes.js":"16","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\store\\localStorage.js":"17","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\store\\actions\\User\\UserActions.js":"18"},{"size":1200,"mtime":1625230488633,"results":"19","hashOfConfig":"20"},{"size":2298,"mtime":1625230488633,"results":"21","hashOfConfig":"20"},{"size":1027,"mtime":1625230488649,"results":"22","hashOfConfig":"20"},{"size":577,"mtime":1625283483659,"results":"23","hashOfConfig":"20"},{"size":2283,"mtime":1625230488649,"results":"24","hashOfConfig":"20"},{"size":407,"mtime":1625230488633,"results":"25","hashOfConfig":"20"},{"size":1475,"mtime":1625230488633,"results":"26","hashOfConfig":"20"},{"size":2211,"mtime":1625230488633,"results":"27","hashOfConfig":"20"},{"size":1395,"mtime":1625230488633,"results":"28","hashOfConfig":"20"},{"size":1942,"mtime":1625230488633,"results":"29","hashOfConfig":"20"},{"size":2003,"mtime":1625230488633,"results":"30","hashOfConfig":"20"},{"size":526,"mtime":1625283720183,"results":"31","hashOfConfig":"20"},{"size":1176,"mtime":1625230488633,"results":"32","hashOfConfig":"20"},{"size":1077,"mtime":1625230488633,"results":"33","hashOfConfig":"20"},{"size":1055,"mtime":1625230488649,"results":"34","hashOfConfig":"20"},{"size":346,"mtime":1625230488649,"results":"35","hashOfConfig":"20"},{"size":501,"mtime":1625230488649,"results":"36","hashOfConfig":"20"},{"size":1998,"mtime":1625230488633,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ayvoda",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\container\\App.js",[],["81","82"],"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\container\\TracksInfo\\TracksInfo.js",["83"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport {\r\n  fetchGetTracksInfo,\r\n  fetchPostTrackHistory,\r\n} from \"../../store/actions/listFMAction/listFMActions\";\r\nimport { Row, Col, Card, Typography, Button } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\n\r\nconst TracksInfo = () => {\r\n  const id = useParams();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user.userLogin);\r\n  const tracks = useSelector((state) => state.listFM.tracks);\r\n  useEffect(() => {\r\n    dispatch(fetchGetTracksInfo(id.id));\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <>\r\n          {tracks.length === 0 ? (\r\n            <div>no data</div>\r\n          ) : (\r\n            <>\r\n              <Title mark level={2}>\r\n                ARTIST : {tracks[0].album.artist.name}\r\n              </Title>\r\n              <Title mark level={3}>\r\n                ALBOM : {tracks[0].album.name}\r\n              </Title>\r\n              <Row gutter={16}>\r\n                {tracks.map((element, index) => (\r\n                  <Col className=\"gutter-row\" span={6} key={index}>\r\n                    <Card\r\n                      hoverable\r\n                      style={{ maxWidth: \"200px\", margin: \"15px\" }}\r\n                    >\r\n                      <Title mark level={5}>\r\n                        № : {element.number}\r\n                      </Title>\r\n                      <Meta\r\n                        title={element.name}\r\n                        description={\"длительность : \" + element.duration}\r\n                      />\r\n                    </Card>\r\n                    <Button\r\n                      onClick={() =>\r\n                        dispatch(fetchPostTrackHistory(element._id, user.token))\r\n                      }\r\n                      type=\"primary\"\r\n                    >\r\n                      Add to History\r\n                    </Button>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <NavLink to=\"/login\">You should to login in</NavLink>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TracksInfo;\r\n",["84","85"],"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\store\\reducers\\listFMReducer.js",[],"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\axios-api.js",[],"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\store\\actions\\listFMAction\\listFMActions.js",["86"],"import {\r\n  ERROR_FETCH,\r\n  GET_ARTIST_INFO_ALBUM,\r\n  GET_LIST_FM_RADIO_LIST,\r\n  GET_TRACKS_INFO_ALBUM,\r\n  GET_TRACK_HISTORY,\r\n  TRACK_HISTORY_FAIL,\r\n} from \"./listFMActionTypes\";\r\nimport axios from \"../../../axios-api\";\r\n\r\nexport const getListFmRadioList = (value) => ({\r\n  type: GET_LIST_FM_RADIO_LIST,\r\n  value,\r\n});\r\nexport const errorFetch = (value) => ({ type: ERROR_FETCH, value });\r\nexport const getArtistInfoAlbum = (value) => ({\r\n  type: GET_ARTIST_INFO_ALBUM,\r\n  value,\r\n});\r\n\r\nexport const getTracksInfoAlbum = (value) => ({\r\n  type: GET_TRACKS_INFO_ALBUM,\r\n  value,\r\n});\r\n\r\nexport const fetchGetRadioList = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(\"/artists\");\r\n      dispatch(getListFmRadioList(response.data));\r\n    } catch (e) {\r\n      dispatch(errorFetch(e));\r\n    }\r\n  };\r\n};\r\nexport const fetchGetArtistInfo = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(\"/albums?artist=\" + id);\r\n      dispatch(getArtistInfoAlbum(response.data));\r\n    } catch (e) {\r\n      dispatch(errorFetch(e));\r\n    }\r\n  };\r\n};\r\nexport const fetchGetTracksInfo = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(\"/tracks?album=\" + id);\r\n      dispatch(getTracksInfoAlbum(response.data));\r\n    } catch (e) {\r\n      dispatch(errorFetch(e));\r\n    }\r\n  };\r\n};\r\n\r\nexport const getTrackHistory = (value) => ({\r\n  type: GET_TRACK_HISTORY,\r\n  value,\r\n});\r\nexport const TrackHistoryFail = (value) => ({\r\n  type: TRACK_HISTORY_FAIL,\r\n  value,\r\n});\r\nexport const fetchPostTrackHistory = (trackId, token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"/track_history\",\r\n        { trackID: trackId },\r\n        {\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        }\r\n      );\r\n    } catch (e) {\r\n      dispatch(TrackHistoryFail(e));\r\n    }\r\n  };\r\n};\r\nexport const fetchGetTrackHistory = (token) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(\"/track_history\", {\r\n        headers: { Authorization: token },\r\n      });\r\n      dispatch(getTrackHistory(response.data));\r\n    } catch (e) {\r\n      dispatch(TrackHistoryFail(e));\r\n    }\r\n  };\r\n};\r\n","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\store\\actions\\User\\UserActionTypes.js",[],"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\container\\ListFM\\ListFM.js",[],"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\container\\Register\\Register.js",[],["87","88"],"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\components\\UserMenu\\UserMenu.js",[],"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\container\\ArtistInfo\\ArtistInfo.js",["89"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { fetchGetArtistInfo } from \"../../store/actions/listFMAction/listFMActions\";\r\nimport { Row, Col, Card, Typography } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { baseUrl, baseImg } from \"../../axios-api\";\r\n\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\n\r\nconst ArtistInfo = () => {\r\n  const id = useParams();\r\n  const dispatch = useDispatch();\r\n  const albums = useSelector((state) => state.listFM.artistInfoAlbum);\r\n  useEffect(() => {\r\n    dispatch(fetchGetArtistInfo(id.id));\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      {albums.length === 0 ? (\r\n        <div>no data</div>\r\n      ) : (\r\n        <>\r\n          <Title mark level={2}>\r\n            {albums[0].artist.name}\r\n          </Title>\r\n          <Row gutter={16}>\r\n            {albums.map((element, index) => (\r\n              <Col span={6} key={index}>\r\n                <Card\r\n                  className=\"gutter-row\"\r\n                  hoverable\r\n                  style={{ maxWidth: \"200px\", margin: \"15px\" }}\r\n                  cover={\r\n                    <img\r\n                      onError={(e) => {\r\n                        e.target.onError = null;\r\n                        e.target.src = baseImg;\r\n                      }}\r\n                      alt=\"albums\"\r\n                      src={baseUrl + \"/uploads/\" + element.photo}\r\n                    />\r\n                  }\r\n                >\r\n                  <Meta\r\n                    title={element.name}\r\n                    description={\"год выпуска : \" + element.yearIssue}\r\n                  />\r\n                  <NavLink to={\"/tracks/\" + element._id}>Show more</NavLink>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArtistInfo;\r\n","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\container\\Login\\Login.js",[],"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\index.js",[],"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\components\\Layout\\Layout.js",["90"],"import React from \"react\";\r\nimport { Layout as LayoutAntD, Button, Space } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport FMLogo from \"../../image/radiologo.png\";\r\nimport { gold } from \"@ant-design/colors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AnonymousMenu from \"../AnonymousMenu/AnonymousMenu\";\r\nimport UserMenu from \"../UserMenu/UserMenu\";\r\nconst { Header, Content } = LayoutAntD;\r\n\r\nconst Layout = (props) => {\r\n  const user = useSelector((state) => state.user.userLogin);\r\n  return (\r\n    <>\r\n      <LayoutAntD>\r\n        <Header style={{ background: gold.primary }}>\r\n          <Space size={[100]} align=\"center\">\r\n            <NavLink to=\"/\">\r\n              <img\r\n                src={FMLogo}\r\n                alt=\"logofm\"\r\n                style={{ display: \"block\", width: \"50px\" }}\r\n              />\r\n            </NavLink>\r\n\r\n            {user ? (\r\n              <UserMenu user={user}/>\r\n            ) : (\r\n              <AnonymousMenu/>\r\n            )}\r\n          </Space>\r\n        </Header>\r\n        <Content style={{ padding: \"10px\" }}>{props.children}</Content>\r\n      </LayoutAntD>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\container\\TrackHistory\\TrackHistory.js",["91"],"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\store\\reducers\\user.js",[],"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\store\\actions\\listFMAction\\listFMActionTypes.js",[],"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\store\\localStorage.js",[],"C:\\Users\\a.abdranbayev\\Desktop\\test\\React-Redux-Node.js-Mongo\\Front_React_Redux\\src\\store\\actions\\User\\UserActions.js",["92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":21,"column":6,"nodeType":"99","endLine":21,"endColumn":16,"suggestions":"100"},{"ruleId":"93","replacedBy":"101"},{"ruleId":"95","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":68,"column":13,"nodeType":"105","messageId":"106","endLine":68,"endColumn":21},{"ruleId":"93","replacedBy":"107"},{"ruleId":"95","replacedBy":"108"},{"ruleId":"97","severity":1,"message":"98","line":18,"column":6,"nodeType":"99","endLine":18,"endColumn":16,"suggestions":"109"},{"ruleId":"103","severity":1,"message":"110","line":2,"column":32,"nodeType":"105","messageId":"106","endLine":2,"endColumn":38},{"ruleId":"97","severity":1,"message":"111","line":13,"column":6,"nodeType":"99","endLine":13,"endColumn":16,"suggestions":"112"},{"ruleId":"103","severity":1,"message":"104","line":26,"column":13,"nodeType":"105","messageId":"106","endLine":26,"endColumn":21},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id.id'. Either include it or remove the dependency array.","ArrayExpression",["115"],["113"],["114"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar",["113"],["114"],["116"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"118","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [dispatch, id.id]",{"range":"123","text":"124"},{"range":"125","text":"124"},"Update the dependencies array to be: [dispatch, user]",{"range":"126","text":"127"},[705,715],"[dispatch, id.id]",[666,676],[522,532],"[dispatch, user]"]